<div class="card mb-8 md:mb-4 md:shadow-xl static">
  <div class="md:card-body md:bg-base-200" data-controller="clears--form-component">
    <%= simple_form_for clear_spec, html: {
      id: "clears__form",
      data: {
        turbo_stream: "true", turbo_frame: 'clears'
      },
      class: 'flex flex-col'
    } do |f| %>
      <header>
        <%= header %>
        <!--TODO: Show rejected comment?-->
      </header>
      <% if clear_spec.job_id.present? %>
        <%= f.input :job_id, as: :hidden %>
        <!--Channel only come from job-->
        <%= f.input :channel_id, as: :hidden %>
      <% end %>
      <div class="iframe-responsive-container hidden">
        <%= content_tag :iframe,
        nil,
        class: "hidden iframe-responsive",
        data: {
          **stimulus_attrs(:clears__form_component, target: "videoFrame")
        } %>
      </div>
      <%= f.input :link,
                input_html: {
                  class: 'w-full',
                  data: {
                    **stimulus_attrs(
                      :clears__form_component,
                      actions: {
                        focusout: "embedLink"
                      },
                      target: "link"
                    )
                  }
                }, hint: t('clear_form.link_field.hint'), disabled: edit_form %>
      <%= f.input :name, input_html: { class: 'w-full' } %>
      <div class="js-only">
        <%= render Clears::StageSelectComponent.new(form: f, simple: true, multiple: !edit_form, required: true) %>
        <% if clear_spec.job_id && ClearImage::TestCase.enabled? %>
          <%= f.label :use_for_test_case, t("clear_form.use_for_test_case_field") %>
          <%= f.check_box :use_for_test_case, class: "toggle toggle-warning block focus:outline-base-content/20", checked: clear_spec.test_case.present? || true  %>
        <% end %>
        <%= f.label :operator_id, class: 'label' %>
        <% if clear_spec.rejected? %>
          <%= f.hint t('clear_form.operator_field.fix_rejection_hint'), class: '!text-error' %>
        <% end %>
        <div id="clears__form__operators_fields" class="hidden">
          <%= f.simple_fields_for :used_operators, include_id: false do |used_operator_form| %>
            <div id="<%= dom_id(used_operator_form.object.operator, :fields) %>">
              <%= render Clears::UsedOperatorFieldsComponent.new(form: used_operator_form) %>
            </div>
          <% end %>
        </div>
      </div>
    <% end %>
    <%= render Primer::TabsComponent.new(tab_names: ['basic', 'detailed'], hidden_class: 'hidden sm:hidden', tab_header_class: 'block') do |tabs_comp| %>
      <%= tabs_comp.with_content_with_tabs do %>
        <%= content_tag :label, class: "label hidden sm:flex cursor-pointer w-fit self-center",
          data: { **stimulus_attrs(:tabber, target: 'tab'), tab_name: 'basic', default_tab: true } do %>
          <span class="label-text"><%= t(:show_video) %></span>
          <div class="p-1"></div>
          <%= content_tag :input, nil, type: 'checkbox', class: "toggle ", data: {
                    **stimulus_attrs(
                      :clears__form_component,
                      actions: {
                        change: "toggleShowVideo"
                      },
                    )
                  } %>
        <% end %>
        <%= content_tag :div,
          data: { **stimulus_attrs(:clears__form_component,
            actions: {
              'dispatch:clickEditOperator': 'highlight',
            }
          )}, id: 'clears_operators' do %>
          <%= content_tag :div, id: "detailed_operators", class: "grid grid-cols-1 hidden sm:flex sm:items-start sm:justify-between sm:hidden",
            data: { **stimulus_attrs(:tabber, target: 'tab'), tab_name: 'detailed' } do %>
            <div
              id="detailed_operators__list"
              class="grid grid-cols-1 sm:flex sm:flex-wrap gap-2 js-only"
            >
              <% clear_spec.used_operators.reject(&:marked_for_destruction?).each do |used_operator| %>
                <%= render Clears::UsedOperatorResponsiveComponent.new(used_operator: used_operator) %>
              <% end %>
              <%= render Clears::Form::NewOperatorButtonComponent.new(squad: clear_spec.squad) %>
            </div>
            <div id="detailed_operators__form_container" class="self-center mt-2 sm:mt-0 sm:w-1/2">
            </div>
          <% end %>
          <%= content_tag :div, id: 'basic_operators', class: 'sm:block',
            data: { **stimulus_attrs(:tabber, target: 'tab'), tab_name: 'basic', default_tab: true } do %>
            <div class=" flex flex-col w-full  ">
              <div class="flex">
                <div id="basic_operators__list" class="grid grid-cols-4 gap-y-2 sm:flex flex-wrap self-center items-center justify-items-end">
                  <% clear_spec.used_operators.reject(&:marked_for_destruction?).each do |used_operator| %>
                    <%= render Clears::UsedOperatorEditMiniComponent.new(used_operator: used_operator) %>
                  <% end %>
                  <%= render Clears::Form::NewOperatorButtonComponent.new(squad: clear_spec.squad, create: true, class: 'col-span-4') %>
                </div>
              </div>
            </div>
            <div class="p-2"></div>
            <div class="flex items-stretch justify-center" >
              <div class="iframe-responsive-container hidden !w-auto flex-grow peer" aria-hidden="true">
                <%= content_tag :iframe,
                  nil,
                  class: "hidden lg:block iframe-responsive",
                  data: {
                    **stimulus_attrs(:clears__form_component, target: "toggleVideoFrame")
                  } %>
              </div>
              <div id="basic_operators__form_container" class="w-full lg:w-fit lg:peer-aria-hidden:w-1/2">
              </div>
            </div>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
    <footer class="mt-4 space-x-2">
      <%= footer %>
    </footer>
  </div>
</div>
